generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  content   String

  @@map("posts")
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime
  updatedAt DateTime

  name          String
  email         String
  emailVerified Boolean
  image         String?
  role UserRole @default(USER)

  sessions Session[]
  accounts Account[]

  @@unique([email])
  @@map("users")
}

model Session {
  id        String   @id @default(uuid())
  createdAt DateTime
  updatedAt DateTime

  expiresAt DateTime
  token     String
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("sessions")
}

model Account {
  id                    String    @id @default(uuid())
  createdAt             DateTime
  updatedAt             DateTime

  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?

  @@map("accounts")
}

model Verification {
  id         String    @id @default(uuid())
  createdAt  DateTime?
  updatedAt  DateTime?

  identifier String
  value      String
  expiresAt  DateTime

  @@map("verifications")
}
